{"version":3,"file":"InfoDialog.esm.js","sources":["../../src/components/InfoDialog.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { forwardRef, ForwardRefRenderFunction } from 'react';\n\nimport {\n  Box,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport type InfoDialogProps = {\n  title: string;\n  open: boolean;\n  onClose?: () => void;\n  dialogActions?: React.ReactNode;\n  children?: React.ReactNode;\n};\n\nexport type ParentComponentRef = HTMLElement;\n\nconst useStyles = makeStyles(_theme => ({\n  closeBtn: {\n    position: 'absolute',\n    right: 8,\n    top: 8,\n  },\n}));\n\nexport const RefForwardingInfoDialog: ForwardRefRenderFunction<\n  ParentComponentRef,\n  InfoDialogProps\n> = (props, forwardedRef): JSX.Element | null => {\n  const { title, open = false, onClose, children, dialogActions } = props;\n  const classes = useStyles();\n\n  return (\n    <Dialog onClose={_ => onClose} open={open} ref={forwardedRef}>\n      <DialogTitle>\n        <Box>\n          <Typography variant=\"h5\">{title}</Typography>\n          <IconButton\n            className={classes.closeBtn}\n            aria-label=\"close\"\n            onClick={onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n      <DialogContent>\n        <Box>{children}</Box>\n      </DialogContent>\n      <DialogActions>{dialogActions}</DialogActions>\n    </Dialog>\n  );\n};\n\nexport const InfoDialog = forwardRef(RefForwardingInfoDialog);\n"],"names":[],"mappings":";;;;AAuCA,MAAM,SAAA,GAAY,WAAW,CAAW,MAAA,MAAA;AAAA,EACtC,QAAU,EAAA;AAAA,IACR,QAAU,EAAA,UAAA;AAAA,IACV,KAAO,EAAA,CAAA;AAAA,IACP,GAAK,EAAA,CAAA;AAAA,GACP;AACF,CAAE,CAAA,CAAA,CAAA;AAEW,MAAA,uBAAA,GAGT,CAAC,KAAA,EAAO,YAAqC,KAAA;AAC/C,EAAA,MAAM,EAAE,KAAO,EAAA,IAAA,GAAO,OAAO,OAAS,EAAA,QAAA,EAAU,eAAkB,GAAA,KAAA,CAAA;AAClE,EAAA,MAAM,UAAU,SAAU,EAAA,CAAA;AAE1B,EAAA,2CACG,MAAO,EAAA,EAAA,OAAA,EAAS,CAAK,CAAA,KAAA,OAAA,EAAS,MAAY,GAAK,EAAA,YAAA,EAAA,kBAC7C,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,IAAA,sCACE,GACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,cAAW,OAAQ,EAAA,IAAA,EAAA,EAAM,KAAM,CAChC,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,UAAA;AAAA,IAAA;AAAA,MACC,WAAW,OAAQ,CAAA,QAAA;AAAA,MACnB,YAAW,EAAA,OAAA;AAAA,MACX,OAAS,EAAA,OAAA;AAAA,KAAA;AAAA,wCAER,SAAU,EAAA,IAAA,CAAA;AAAA,GAEf,CACF,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,aACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,GAAK,EAAA,IAAA,EAAA,QAAS,CACjB,CAAA,kBACC,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,IAAA,EAAe,aAAc,CAChC,CAAA,CAAA;AAEJ,EAAA;AAEa,MAAA,UAAA,GAAa,WAAW,uBAAuB;;;;"}