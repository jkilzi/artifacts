{"version":3,"file":"WorkflowResult.esm.js","sources":["../../src/components/WorkflowResult.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\n\nimport { InfoCard, Link } from '@backstage/core-components';\nimport { RouteFunc, useApi, useRouteRef } from '@backstage/core-plugin-api';\nimport { AboutField } from '@backstage/plugin-catalog';\n\nimport {\n  CircularProgress,\n  Grid,\n  List,\n  ListItem,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport DotIcon from '@material-ui/icons/FiberManualRecord';\n\nimport {\n  AssessedProcessInstanceDTO,\n  ProcessInstanceErrorDTO,\n  ProcessInstanceStatusDTO,\n  QUERY_PARAM_ASSESSMENT_INSTANCE_ID,\n  WorkflowOverviewDTO,\n  WorkflowResultDTO,\n  WorkflowResultDTOCompletedWithEnum,\n} from '@red-hat-developer-hub/backstage-plugin-orchestrator-common';\n\nimport { orchestratorApiRef } from '../api';\nimport { VALUE_UNAVAILABLE } from '../constants';\nimport { executeWorkflowRouteRef } from '../routes';\nimport { buildUrl } from '../utils/UrlUtils';\nimport {\n  WorkflowDescriptionModal,\n  WorkflowDescriptionModalProps,\n} from './WorkflowDescriptionModal';\n\nconst useStyles = makeStyles(theme => ({\n  outputGrid: {\n    '& h2': {\n      textTransform: 'none',\n      fontSize: 'small',\n    },\n  },\n  links: {\n    padding: '0px',\n  },\n  errorIcon: {\n    color: theme.palette.error.main,\n  },\n}));\n\nconst finalStates: ProcessInstanceStatusDTO[] = [\n  ProcessInstanceStatusDTO.Error,\n  ProcessInstanceStatusDTO.Completed,\n  ProcessInstanceStatusDTO.Aborted,\n  ProcessInstanceStatusDTO.Suspended,\n];\n\nconst ResultMessage = ({\n  status,\n  error,\n  resultMessage,\n  completedWith,\n}: {\n  status?: ProcessInstanceStatusDTO;\n  error?: ProcessInstanceErrorDTO;\n  resultMessage?: WorkflowResultDTO['message'];\n  completedWith: WorkflowResultDTO['completedWith'];\n}) => {\n  const styles = useStyles();\n\n  const errorMessage = error?.message || error?.toString();\n  let noResult = <></>;\n  if (!resultMessage && !errorMessage) {\n    if (status && finalStates.includes(status)) {\n      noResult = (\n        <i>The workflow provided no additional info about the status.</i>\n      );\n    } else {\n      noResult = (\n        <Typography>\n          <CircularProgress size=\"0.75rem\" />\n          &nbsp;The workflow has not yet provided additional info about the\n          status.\n        </Typography>\n      );\n    }\n  }\n\n  return (\n    <>\n      {resultMessage && (\n        <Typography>\n          {completedWith === WorkflowResultDTOCompletedWithEnum.Error && (\n            <>\n              <DotIcon\n                style={{ fontSize: '0.75rem' }}\n                className={styles.errorIcon}\n              />\n              &nbsp;\n            </>\n          )}\n          {resultMessage}\n        </Typography>\n      )}\n      {errorMessage && <b>{errorMessage}</b>}\n      {noResult}\n    </>\n  );\n};\n\nconst NextWorkflows = ({\n  instanceId,\n  nextWorkflows,\n}: {\n  instanceId: string;\n  nextWorkflows: WorkflowResultDTO['nextWorkflows'];\n}) => {\n  const styles = useStyles();\n\n  const orchestratorApi = useApi(orchestratorApiRef);\n  const executeWorkflowLink: RouteFunc<{ workflowId: string }> = useRouteRef(\n    executeWorkflowRouteRef,\n  );\n\n  const [\n    currentOpenedWorkflowDescriptionModalID,\n    setCurrentOpenedWorkflowDescriptionModalID,\n  ] = React.useState('');\n\n  const [currentWorkflow, setCurrentWorkflow] = React.useState(\n    {} as WorkflowOverviewDTO,\n  );\n  const [workflowError, setWorkflowError] =\n    React.useState<WorkflowDescriptionModalProps['workflowError']>();\n\n  const runWorkflowLink = React.useMemo(\n    () =>\n      buildUrl(\n        executeWorkflowLink({\n          workflowId: currentOpenedWorkflowDescriptionModalID,\n        }),\n        {\n          [QUERY_PARAM_ASSESSMENT_INSTANCE_ID]: instanceId,\n        },\n      ),\n    [currentOpenedWorkflowDescriptionModalID, executeWorkflowLink, instanceId],\n  );\n\n  const openWorkflowDescriptionModal = React.useCallback(\n    (itemId: string) => {\n      if (itemId) {\n        orchestratorApi\n          .getWorkflowOverview(itemId)\n          .then(workflow => {\n            setCurrentWorkflow(workflow.data);\n          })\n          .catch(error => {\n            setWorkflowError({ itemId, error });\n          });\n        setCurrentOpenedWorkflowDescriptionModalID(itemId);\n      }\n    },\n    [orchestratorApi],\n  );\n\n  const closeWorkflowDescriptionModal = React.useCallback(() => {\n    setCurrentOpenedWorkflowDescriptionModalID('');\n    setCurrentWorkflow({} as WorkflowOverviewDTO);\n  }, []);\n\n  if (!nextWorkflows?.length) {\n    return null;\n  }\n\n  const sectionLabel =\n    nextWorkflows.length === 1\n      ? 'Suggested next workflow'\n      : 'Suggested next workflows';\n\n  return (\n    <Grid item xs={12} className={styles.outputGrid}>\n      <AboutField label={sectionLabel}>\n        <List dense disablePadding>\n          {nextWorkflows.map(item => (\n            <ListItem key={item.id} disableGutters>\n              <Link\n                color=\"primary\"\n                to=\"#\"\n                onClick={() => {\n                  openWorkflowDescriptionModal(item.id);\n                }}\n              >\n                {item.name}\n              </Link>\n            </ListItem>\n          ))}\n        </List>\n      </AboutField>\n      <WorkflowDescriptionModal\n        workflow={currentWorkflow}\n        workflowError={workflowError}\n        runWorkflowLink={runWorkflowLink}\n        open={!!currentOpenedWorkflowDescriptionModalID}\n        onClose={closeWorkflowDescriptionModal}\n      />\n    </Grid>\n  );\n};\n\nconst WorkflowOutputs = ({\n  outputs,\n}: {\n  outputs: WorkflowResultDTO['outputs'];\n}) => {\n  const styles = useStyles();\n\n  if (!outputs?.length) {\n    return null;\n  }\n\n  const links = outputs?.filter(item => item.format === 'link');\n  const nonLinks = outputs?.filter(item => item.format !== 'link');\n\n  return (\n    <>\n      {nonLinks.map(item => {\n        let value = item.value || VALUE_UNAVAILABLE;\n        if (typeof value !== 'string') {\n          // This is a workaround for malformed returned data. It should not happen if the sender does WorkflowResult validation properly.\n          if (typeof value === 'object') {\n            value = `Object: ${JSON.stringify(value)}`;\n          } else {\n            value = 'Unexpected type';\n          }\n        }\n\n        return (\n          <Grid item md={6} key={item.key} className={styles.outputGrid}>\n            <AboutField label={item.key} value={value as string} />\n          </Grid>\n        );\n      })}\n\n      {links?.length > 0 && (\n        <Grid item md={12} key=\"__links\" className={styles.links}>\n          <AboutField label=\"Links\">\n            <List dense disablePadding>\n              {links\n                .filter(\n                  item =>\n                    item.value && item.key && typeof item.value === 'string',\n                )\n                .map(item => {\n                  return (\n                    <ListItem disableGutters key={item.key}>\n                      <Link to={item.value as string}>{item.key}</Link>\n                    </ListItem>\n                  );\n                })}\n            </List>\n          </AboutField>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport const WorkflowResult: React.FC<{\n  assessedInstance: AssessedProcessInstanceDTO;\n  className: string;\n}> = ({ assessedInstance, className }) => {\n  const instance = assessedInstance.instance;\n  const result = instance.workflowdata?.result;\n\n  return (\n    <InfoCard\n      title=\"Results\"\n      subheader={\n        <ResultMessage\n          status={instance.status}\n          error={instance.error}\n          resultMessage={result?.message}\n          completedWith={result?.completedWith}\n        />\n      }\n      divider={false}\n      className={className}\n    >\n      <Grid container alignContent=\"flex-start\">\n        <NextWorkflows\n          instanceId={instance.id}\n          nextWorkflows={result?.nextWorkflows}\n        />\n        <WorkflowOutputs outputs={result?.outputs} />\n      </Grid>\n    </InfoCard>\n  );\n};\n\nWorkflowResult.displayName = 'WorkflowResult';\n"],"names":[],"mappings":"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"}