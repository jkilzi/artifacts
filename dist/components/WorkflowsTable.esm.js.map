{"version":3,"file":"WorkflowsTable.esm.js","sources":["../../src/components/WorkflowsTable.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Link, TableColumn, TableProps } from '@backstage/core-components';\nimport { useRouteRef } from '@backstage/core-plugin-api';\nimport { usePermission } from '@backstage/plugin-permission-react';\n\nimport Pageview from '@material-ui/icons/Pageview';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\n\nimport {\n  capitalize,\n  orchestratorWorkflowExecutePermission,\n  ProcessInstanceStatusDTO,\n  WorkflowOverviewDTO,\n} from '@red-hat-developer-hub/backstage-plugin-orchestrator-common';\n\nimport { VALUE_UNAVAILABLE } from '../constants';\nimport WorkflowOverviewFormatter, {\n  FormattedWorkflowOverview,\n} from '../dataFormatters/WorkflowOverviewFormatter';\nimport {\n  executeWorkflowRouteRef,\n  workflowDefinitionsRouteRef,\n} from '../routes';\nimport OverrideBackstageTable from './ui/OverrideBackstageTable';\nimport { WorkflowInstanceStatusIndicator } from './WorkflowInstanceStatusIndicator';\n\nexport interface WorkflowsTableProps {\n  items: WorkflowOverviewDTO[];\n}\n\nexport const WorkflowsTable = ({ items }: WorkflowsTableProps) => {\n  const navigate = useNavigate();\n  const definitionLink = useRouteRef(workflowDefinitionsRouteRef);\n  const executeWorkflowLink = useRouteRef(executeWorkflowRouteRef);\n  const [data, setData] = useState<FormattedWorkflowOverview[]>([]);\n  const permittedToExecute = usePermission({\n    permission: orchestratorWorkflowExecutePermission,\n  });\n\n  const initialState = useMemo(\n    () => items.map(WorkflowOverviewFormatter.format),\n    [items],\n  );\n\n  useEffect(() => {\n    setData(initialState);\n  }, [initialState]);\n\n  const handleView = useCallback(\n    (rowData: FormattedWorkflowOverview) => {\n      navigate(\n        definitionLink({ workflowId: rowData.id, format: rowData.format }),\n      );\n    },\n    [definitionLink, navigate],\n  );\n\n  const handleExecute = useCallback(\n    (rowData: FormattedWorkflowOverview) => {\n      navigate(executeWorkflowLink({ workflowId: rowData.id }));\n    },\n    [executeWorkflowLink, navigate],\n  );\n\n  const actions = useMemo(() => {\n    const actionItems: TableProps<FormattedWorkflowOverview>['actions'] = [\n      {\n        icon: PlayArrow,\n        tooltip: 'Execute',\n        disabled: !permittedToExecute.allowed,\n        onClick: (_, rowData) =>\n          handleExecute(rowData as FormattedWorkflowOverview),\n      },\n      {\n        icon: Pageview,\n        tooltip: 'View',\n        onClick: (_, rowData) =>\n          handleView(rowData as FormattedWorkflowOverview),\n      },\n    ];\n\n    return actionItems;\n  }, [handleExecute, handleView, permittedToExecute]);\n\n  const columns = useMemo<TableColumn<FormattedWorkflowOverview>[]>(\n    () => [\n      {\n        title: 'Name',\n        field: 'name',\n        render: rowData => (\n          <Link\n            to={definitionLink({\n              workflowId: rowData.id,\n              format: rowData.format,\n            })}\n          >\n            {rowData.name}\n          </Link>\n        ),\n      },\n      {\n        title: 'Category',\n        field: 'category',\n        render: rowData => capitalize(rowData.category),\n      },\n      { title: 'Last run', field: 'lastTriggered' },\n      {\n        title: 'Last run status',\n        field: 'lastRunStatus',\n        render: rowData =>\n          rowData.lastRunStatus !== VALUE_UNAVAILABLE &&\n          rowData.lastRunId !== VALUE_UNAVAILABLE ? (\n            <WorkflowInstanceStatusIndicator\n              status={rowData.lastRunStatus as ProcessInstanceStatusDTO}\n              lastRunId={rowData.lastRunId}\n            />\n          ) : (\n            VALUE_UNAVAILABLE\n          ),\n      },\n      { title: 'Description', field: 'description', minWidth: '25vw' },\n    ],\n    [definitionLink],\n  );\n\n  const options = useMemo<TableProps['options']>(\n    () => ({\n      search: true,\n      paging: false,\n      actionsColumnIndex: columns.length,\n    }),\n    [columns.length],\n  );\n\n  return (\n    <OverrideBackstageTable<FormattedWorkflowOverview>\n      title=\"Workflows\"\n      options={options}\n      columns={columns}\n      data={data}\n      actions={actions}\n    />\n  );\n};\n"],"names":[],"mappings":"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"}