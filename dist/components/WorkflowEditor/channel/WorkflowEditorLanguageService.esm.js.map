{"version":3,"file":"WorkflowEditorLanguageService.esm.js","sources":["../../../../src/components/WorkflowEditor/channel/WorkflowEditorLanguageService.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  FileLanguage,\n  getFileLanguageOrThrow,\n} from '@kie-tools/serverless-workflow-language-service/dist/api';\nimport {\n  SwfJsonLanguageService,\n  SwfYamlLanguageService,\n  type SwfLanguageServiceArgs,\n} from '@kie-tools/serverless-workflow-language-service/dist/channel';\nimport { SwfServiceCatalogService } from '@kie-tools/serverless-workflow-service-catalog/dist/api';\n\nexport class WorkflowEditorLanguageService {\n  constructor(private readonly services: SwfServiceCatalogService[] = []) {}\n  public getLs(\n    relativePath: string,\n  ): SwfJsonLanguageService | SwfYamlLanguageService {\n    const lsArgs = this.getDefaultLsArgs({});\n\n    const fileLanguage = getFileLanguageOrThrow(relativePath);\n    if (fileLanguage === FileLanguage.YAML) {\n      return new SwfYamlLanguageService(lsArgs);\n    } else if (fileLanguage === FileLanguage.JSON) {\n      return new SwfJsonLanguageService(lsArgs);\n    }\n    throw new Error(`Could not determine LS for ${relativePath}`);\n  }\n\n  private getDefaultLsArgs(\n    configOverrides: Partial<SwfLanguageServiceArgs['config']>,\n  ): Omit<SwfLanguageServiceArgs, 'lang'> {\n    return {\n      fs: {},\n      serviceCatalog: {\n        global: {\n          getServices: async () => [],\n        },\n        relative: {\n          getServices: async _textDocument => this.services,\n        },\n        getServiceFileNameFromSwfServiceCatalogServiceId: async (\n          registryName: string,\n          serviceCatalogServiceId: string,\n        ) => `${registryName}__${serviceCatalogServiceId}__latest.yaml`,\n      },\n      config: {\n        shouldDisplayServiceRegistriesIntegration: async () => false,\n        shouldIncludeJsonSchemaDiagnostics: async () => true,\n        shouldReferenceServiceRegistryFunctionsWithUrls: async () => true,\n        getSpecsDirPosixPaths: async _textDocument => ({\n          specsDirRelativePosixPath: 'specs',\n          specsDirAbsolutePosixPath: 'specs',\n        }),\n        getRoutesDirPosixPaths: async _textDocument => ({\n          routesDirRelativePosixPath: '',\n          routesDirAbsolutePosixPath: '',\n        }),\n        shouldConfigureServiceRegistries: () => false,\n        shouldServiceRegistriesLogIn: () => false,\n        canRefreshServices: () => false,\n        ...configOverrides,\n      },\n      jqCompletions: {\n        remote: {\n          getJqAutocompleteProperties: (_args: any) => Promise.resolve([]),\n        },\n        relative: {\n          getJqAutocompleteProperties: (_args: any) => Promise.resolve([]),\n        },\n      },\n    };\n  }\n}\n"],"names":[],"mappings":";;;AA0BO,MAAM,6BAA8B,CAAA;AAAA,EACzC,WAAA,CAA6B,QAAuC,GAAA,EAAI,EAAA;AAA3C,IAAA,IAAA,CAAA,QAAA,GAAA,QAAA,CAAA;AAAA,GAA4C;AAAA,EAClE,MACL,YACiD,EAAA;AACjD,IAAA,MAAM,MAAS,GAAA,IAAA,CAAK,gBAAiB,CAAA,EAAE,CAAA,CAAA;AAEvC,IAAM,MAAA,YAAA,GAAe,uBAAuB,YAAY,CAAA,CAAA;AACxD,IAAI,IAAA,YAAA,KAAiB,aAAa,IAAM,EAAA;AACtC,MAAO,OAAA,IAAI,uBAAuB,MAAM,CAAA,CAAA;AAAA,KAC1C,MAAA,IAAW,YAAiB,KAAA,YAAA,CAAa,IAAM,EAAA;AAC7C,MAAO,OAAA,IAAI,uBAAuB,MAAM,CAAA,CAAA;AAAA,KAC1C;AACA,IAAA,MAAM,IAAI,KAAA,CAAM,CAA8B,2BAAA,EAAA,YAAY,CAAE,CAAA,CAAA,CAAA;AAAA,GAC9D;AAAA,EAEQ,iBACN,eACsC,EAAA;AACtC,IAAO,OAAA;AAAA,MACL,IAAI,EAAC;AAAA,MACL,cAAgB,EAAA;AAAA,QACd,MAAQ,EAAA;AAAA,UACN,WAAA,EAAa,YAAY,EAAC;AAAA,SAC5B;AAAA,QACA,QAAU,EAAA;AAAA,UACR,WAAA,EAAa,OAAM,aAAA,KAAiB,IAAK,CAAA,QAAA;AAAA,SAC3C;AAAA,QACA,kDAAkD,OAChD,YAAA,EACA,4BACG,CAAG,EAAA,YAAY,KAAK,uBAAuB,CAAA,aAAA,CAAA;AAAA,OAClD;AAAA,MACA,MAAQ,EAAA;AAAA,QACN,2CAA2C,YAAY,KAAA;AAAA,QACvD,oCAAoC,YAAY,IAAA;AAAA,QAChD,iDAAiD,YAAY,IAAA;AAAA,QAC7D,qBAAA,EAAuB,OAAM,aAAkB,MAAA;AAAA,UAC7C,yBAA2B,EAAA,OAAA;AAAA,UAC3B,yBAA2B,EAAA,OAAA;AAAA,SAC7B,CAAA;AAAA,QACA,sBAAA,EAAwB,OAAM,aAAkB,MAAA;AAAA,UAC9C,0BAA4B,EAAA,EAAA;AAAA,UAC5B,0BAA4B,EAAA,EAAA;AAAA,SAC9B,CAAA;AAAA,QACA,kCAAkC,MAAM,KAAA;AAAA,QACxC,8BAA8B,MAAM,KAAA;AAAA,QACpC,oBAAoB,MAAM,KAAA;AAAA,QAC1B,GAAG,eAAA;AAAA,OACL;AAAA,MACA,aAAe,EAAA;AAAA,QACb,MAAQ,EAAA;AAAA,UACN,6BAA6B,CAAC,KAAA,KAAe,OAAQ,CAAA,OAAA,CAAQ,EAAE,CAAA;AAAA,SACjE;AAAA,QACA,QAAU,EAAA;AAAA,UACR,6BAA6B,CAAC,KAAA,KAAe,OAAQ,CAAA,OAAA,CAAQ,EAAE,CAAA;AAAA,SACjE;AAAA,OACF;AAAA,KACF,CAAA;AAAA,GACF;AACF;;;;"}