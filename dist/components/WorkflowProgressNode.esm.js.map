{"version":3,"file":"WorkflowProgressNode.esm.js","sources":["../../src/components/WorkflowProgressNode.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport Moment from 'react-moment';\n\nimport { Tooltip, Typography } from '@material-ui/core';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport HourglassTopIcon from '@mui/icons-material/HourglassTop';\nimport PauseCircleIcon from '@mui/icons-material/PauseCircle';\n\nimport { VALUE_UNAVAILABLE } from '../constants';\nimport { useWorkflowInstanceStateColors } from '../hooks/useWorkflowInstanceStatusColors';\nimport { Paragraph } from './Paragraph';\nimport { WorkflowProgressNodeModel } from './WorkflowProgressNodeModel';\n\nconst WorkflowProgressNodeIcon: React.FC<{\n  status?: WorkflowProgressNodeModel['status'];\n  error?: WorkflowProgressNodeModel['error'];\n}> = ({ status, error }) => {\n  const color = useWorkflowInstanceStateColors(status);\n  switch (status) {\n    case 'Error': {\n      return (\n        <Tooltip\n          title={\n            error?.message ??\n            'Additional details about this error are not available'\n          }\n        >\n          <ErrorIcon className={color} />\n        </Tooltip>\n      );\n    }\n    case 'Completed': {\n      return (\n        <Tooltip title=\"Completed\">\n          <CheckCircleIcon className={color} />\n        </Tooltip>\n      );\n    }\n    case 'Active': {\n      return (\n        <Tooltip title=\"Active\">\n          <HourglassTopIcon className={color} />\n        </Tooltip>\n      );\n    }\n    case 'Aborted': {\n      return (\n        <Tooltip title=\"Aborted\">\n          <CancelIcon className={color} />\n        </Tooltip>\n      );\n    }\n    case 'Suspended': {\n      return (\n        <Tooltip title=\"Suspended\">\n          <PauseCircleIcon className={color} />\n        </Tooltip>\n      );\n    }\n    case 'Pending': {\n      return (\n        <Tooltip title=\"Pending\">\n          <HourglassTopIcon className={color} />\n        </Tooltip>\n      );\n    }\n    default:\n      return null;\n  }\n};\nWorkflowProgressNodeIcon.displayName = 'WorkflowProgressNodeIcon';\n\nexport const WorkflowProgressNode: React.FC<{\n  model: WorkflowProgressNodeModel;\n}> = ({ model }) => (\n  <Paragraph>\n    <Typography\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n      }}\n    >\n      <WorkflowProgressNodeIcon status={model.status} error={model.error} />\n      <Typography style={{ paddingLeft: '8px' }}>{model.name}</Typography>\n    </Typography>\n    <small style={{ paddingLeft: '32px', color: 'grey' }}>\n      {!model.exit ? (\n        VALUE_UNAVAILABLE\n      ) : (\n        <Moment fromNow>{new Date(`${model.exit}`)}</Moment>\n      )}\n    </small>\n  </Paragraph>\n);\nWorkflowProgressNode.displayName = 'WorkflowProgressNode';\n"],"names":[],"mappings":";;;;;;;;;;;;AA8BA,MAAM,wBAGD,GAAA,CAAC,EAAE,MAAA,EAAQ,OAAY,KAAA;AAC1B,EAAM,MAAA,KAAA,GAAQ,+BAA+B,MAAM,CAAA,CAAA;AACnD,EAAA,QAAQ,MAAQ;AAAA,IACd,KAAK,OAAS,EAAA;AACZ,MACE,uBAAA,KAAA,CAAA,aAAA;AAAA,QAAC,OAAA;AAAA,QAAA;AAAA,UACC,KAAA,EACE,OAAO,OACP,IAAA,uDAAA;AAAA,SAAA;AAAA,wBAGF,KAAA,CAAA,aAAA,CAAC,SAAU,EAAA,EAAA,SAAA,EAAW,KAAO,EAAA,CAAA;AAAA,OAC/B,CAAA;AAAA,KAEJ;AAAA,IACA,KAAK,WAAa,EAAA;AAChB,MACE,uBAAA,KAAA,CAAA,aAAA,CAAC,WAAQ,KAAM,EAAA,WAAA,EAAA,sCACZ,eAAgB,EAAA,EAAA,SAAA,EAAW,OAAO,CACrC,CAAA,CAAA;AAAA,KAEJ;AAAA,IACA,KAAK,QAAU,EAAA;AACb,MACE,uBAAA,KAAA,CAAA,aAAA,CAAC,WAAQ,KAAM,EAAA,QAAA,EAAA,sCACZ,gBAAiB,EAAA,EAAA,SAAA,EAAW,OAAO,CACtC,CAAA,CAAA;AAAA,KAEJ;AAAA,IACA,KAAK,SAAW,EAAA;AACd,MACE,uBAAA,KAAA,CAAA,aAAA,CAAC,WAAQ,KAAM,EAAA,SAAA,EAAA,sCACZ,UAAW,EAAA,EAAA,SAAA,EAAW,OAAO,CAChC,CAAA,CAAA;AAAA,KAEJ;AAAA,IACA,KAAK,WAAa,EAAA;AAChB,MACE,uBAAA,KAAA,CAAA,aAAA,CAAC,WAAQ,KAAM,EAAA,WAAA,EAAA,sCACZ,eAAgB,EAAA,EAAA,SAAA,EAAW,OAAO,CACrC,CAAA,CAAA;AAAA,KAEJ;AAAA,IACA,KAAK,SAAW,EAAA;AACd,MACE,uBAAA,KAAA,CAAA,aAAA,CAAC,WAAQ,KAAM,EAAA,SAAA,EAAA,sCACZ,gBAAiB,EAAA,EAAA,SAAA,EAAW,OAAO,CACtC,CAAA,CAAA;AAAA,KAEJ;AAAA,IACA;AACE,MAAO,OAAA,IAAA,CAAA;AAAA,GACX;AACF,CAAA,CAAA;AACA,wBAAA,CAAyB,WAAc,GAAA,0BAAA,CAAA;AAEhC,MAAM,uBAER,CAAC,EAAE,KAAM,EAAA,yCACX,SACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,EAAC,UAAA;AAAA,EAAA;AAAA,IACC,KAAO,EAAA;AAAA,MACL,OAAS,EAAA,MAAA;AAAA,MACT,UAAY,EAAA,QAAA;AAAA,KACd;AAAA,GAAA;AAAA,sCAEC,wBAAyB,EAAA,EAAA,MAAA,EAAQ,MAAM,MAAQ,EAAA,KAAA,EAAO,MAAM,KAAO,EAAA,CAAA;AAAA,kBACpE,KAAA,CAAA,aAAA,CAAC,cAAW,KAAO,EAAA,EAAE,aAAa,KAAM,EAAA,EAAA,EAAI,MAAM,IAAK,CAAA;AACzD,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,OAAM,EAAA,EAAA,KAAA,EAAO,EAAE,WAAA,EAAa,QAAQ,KAAO,EAAA,MAAA,EACzC,EAAA,EAAA,CAAC,KAAM,CAAA,IAAA,GACN,oCAEC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,EAAO,OAAO,EAAA,IAAA,EAAA,kBAAM,IAAA,IAAA,CAAK,CAAG,EAAA,KAAA,CAAM,IAAI,CAAA,CAAE,CAAE,CAE/C,CACF,EAAA;AAEF,oBAAA,CAAqB,WAAc,GAAA,sBAAA;;;;"}