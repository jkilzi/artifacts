{"version":3,"file":"WorkflowInstancePage.esm.js","sources":["../../src/components/WorkflowInstancePage.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport {\n  ContentHeader,\n  Progress,\n  ResponseErrorPanel,\n} from '@backstage/core-components';\nimport {\n  useApi,\n  useRouteRef,\n  useRouteRefParams,\n} from '@backstage/core-plugin-api';\nimport { usePermission } from '@backstage/plugin-permission-react';\n\nimport { Button, Grid, Tooltip } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport {\n  AssessedProcessInstanceDTO,\n  orchestratorWorkflowExecutePermission,\n  orchestratorWorkflowInstanceAbortPermission,\n  ProcessInstanceStatusDTO,\n  QUERY_PARAM_ASSESSMENT_INSTANCE_ID,\n  QUERY_PARAM_INSTANCE_ID,\n} from '@red-hat-developer-hub/backstage-plugin-orchestrator-common';\n\nimport { orchestratorApiRef } from '../api';\nimport { SHORT_REFRESH_INTERVAL } from '../constants';\nimport usePolling from '../hooks/usePolling';\nimport { executeWorkflowRouteRef, workflowInstanceRouteRef } from '../routes';\nimport { isNonNullable } from '../utils/TypeGuards';\nimport { buildUrl } from '../utils/UrlUtils';\nimport { BaseOrchestratorPage } from './BaseOrchestratorPage';\nimport { InfoDialog } from './InfoDialog';\nimport { WorkflowInstancePageContent } from './WorkflowInstancePageContent';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    abortButton: {\n      backgroundColor: theme.palette.error.main,\n      color: theme.palette.getContrastText(theme.palette.error.main),\n      '&:hover': {\n        backgroundColor: theme.palette.error.dark,\n      },\n    },\n  }),\n);\n\nexport type AbortConfirmationDialogActionsProps = {\n  handleSubmit: () => void;\n  handleCancel: () => void;\n};\n\nexport type AbortAlertDialogActionsProps = {\n  handleClose: () => void;\n};\n\nexport type AbortAlertDialogContentProps = {\n  message: string;\n};\n\nconst AbortConfirmationDialogContent = () => (\n  <div>Are you sure you want to abort this workflow instance?</div>\n);\n\nconst AbortAlertDialogContent = (props: AbortAlertDialogContentProps) => (\n  <div>\n    The abort operation failed with the following error: {props.message}\n  </div>\n);\n\nconst AbortConfirmationDialogActions = (\n  props: AbortConfirmationDialogActionsProps,\n) => (\n  <>\n    <Button onClick={props.handleCancel}>Cancel</Button>\n    <Button onClick={props.handleSubmit} color=\"primary\">\n      Ok\n    </Button>\n  </>\n);\n\nconst AbortAlertDialogActions = (props: AbortAlertDialogActionsProps) => (\n  <Button onClick={props.handleClose} color=\"primary\">\n    OK\n  </Button>\n);\n\nexport const WorkflowInstancePage = ({\n  instanceId,\n}: {\n  instanceId?: string;\n}) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const orchestratorApi = useApi(orchestratorApiRef);\n  const executeWorkflowLink = useRouteRef(executeWorkflowRouteRef);\n  const { instanceId: queryInstanceId } = useRouteRefParams(\n    workflowInstanceRouteRef,\n  );\n  const [isAbortConfirmationDialogOpen, setIsAbortConfirmationDialogOpen] =\n    useState(false);\n  const [isAbortAlertDialogOpen, setIsAbortAlertDialogOpen] = useState(false);\n  const [abortWorkflowInstanceErrorMsg, setAbortWorkflowInstanceErrorMsg] =\n    useState('');\n  const permittedToExecute = usePermission({\n    permission: orchestratorWorkflowExecutePermission,\n  });\n\n  const permittedToAbort = usePermission({\n    permission: orchestratorWorkflowInstanceAbortPermission,\n  });\n\n  const fetchInstance = React.useCallback(async () => {\n    if (!instanceId && !queryInstanceId) {\n      return undefined;\n    }\n    const res = await orchestratorApi.getInstance(\n      instanceId ?? queryInstanceId,\n      true,\n    );\n    return res.data;\n  }, [instanceId, orchestratorApi, queryInstanceId]);\n\n  const { loading, error, value, restart } = usePolling<\n    AssessedProcessInstanceDTO | undefined\n  >(\n    fetchInstance,\n    SHORT_REFRESH_INTERVAL,\n    (curValue: AssessedProcessInstanceDTO | undefined) =>\n      !!curValue &&\n      (curValue.instance.status === 'Active' ||\n        curValue.instance.status === 'Pending' ||\n        !curValue.instance.status),\n  );\n\n  const canAbort =\n    value?.instance.status === ProcessInstanceStatusDTO.Active ||\n    value?.instance.status === ProcessInstanceStatusDTO.Error;\n\n  const canRerun =\n    value?.instance.status === ProcessInstanceStatusDTO.Completed ||\n    value?.instance.status === ProcessInstanceStatusDTO.Aborted ||\n    value?.instance.status === ProcessInstanceStatusDTO.Error;\n\n  const toggleAbortConfirmationDialog = () => {\n    setIsAbortConfirmationDialogOpen(!isAbortConfirmationDialogOpen);\n  };\n\n  const toggleAbortAlertDialog = () => {\n    setIsAbortAlertDialogOpen(!isAbortAlertDialogOpen);\n  };\n\n  const handleAbort = React.useCallback(async () => {\n    if (value) {\n      try {\n        await orchestratorApi.abortWorkflowInstance(value.instance.id);\n        restart();\n      } catch (e) {\n        setAbortWorkflowInstanceErrorMsg(`${(e as Error).message}`);\n        setIsAbortAlertDialogOpen(true);\n      }\n      setIsAbortConfirmationDialogOpen(false);\n    }\n  }, [orchestratorApi, restart, value]);\n\n  const handleRerun = React.useCallback(() => {\n    if (!value) {\n      return;\n    }\n    const routeUrl = executeWorkflowLink({\n      workflowId: value.instance.processId,\n    });\n\n    const urlToNavigate = buildUrl(routeUrl, {\n      [QUERY_PARAM_INSTANCE_ID]: value.instance.id,\n      [QUERY_PARAM_ASSESSMENT_INSTANCE_ID]: value.assessedBy?.id,\n    });\n    navigate(urlToNavigate);\n  }, [value, navigate, executeWorkflowLink]);\n\n  return (\n    <BaseOrchestratorPage\n      title={value?.instance.processId ?? value?.instance.id ?? instanceId}\n      type=\"Workflow runs\"\n      typeLink=\"/orchestrator/instances\"\n    >\n      {loading ? <Progress /> : null}\n      {error ? <ResponseErrorPanel error={error} /> : null}\n      {!loading && isNonNullable(value) ? (\n        <>\n          <ContentHeader title=\"\">\n            <InfoDialog\n              title=\"Abort workflow\"\n              onClose={toggleAbortConfirmationDialog}\n              open={isAbortConfirmationDialogOpen}\n              dialogActions={\n                <AbortConfirmationDialogActions\n                  handleCancel={toggleAbortConfirmationDialog}\n                  handleSubmit={handleAbort}\n                />\n              }\n              children={<AbortConfirmationDialogContent />}\n            />\n            <InfoDialog\n              title=\"Abort workflow failed\"\n              onClose={toggleAbortAlertDialog}\n              open={isAbortAlertDialogOpen}\n              dialogActions={\n                <AbortAlertDialogActions handleClose={toggleAbortAlertDialog} />\n              }\n              children={\n                <AbortAlertDialogContent\n                  message={abortWorkflowInstanceErrorMsg}\n                />\n              }\n            />\n            <Grid container item justifyContent=\"flex-end\" spacing={1}>\n              <Grid item>\n                <Tooltip\n                  title=\"user not authorized to abort workflow\"\n                  disableHoverListener={permittedToAbort.allowed}\n                >\n                  <Button\n                    variant=\"contained\"\n                    disabled={!permittedToAbort.allowed || !canAbort}\n                    onClick={toggleAbortConfirmationDialog}\n                    className={classes.abortButton}\n                  >\n                    Abort\n                  </Button>\n                </Tooltip>\n              </Grid>\n\n              <Grid item>\n                <Tooltip\n                  title=\"user not authorized to execute workflow\"\n                  disableHoverListener={permittedToExecute.allowed}\n                >\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!permittedToExecute.allowed || !canRerun}\n                    onClick={handleRerun}\n                  >\n                    Rerun\n                  </Button>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </ContentHeader>\n          <WorkflowInstancePageContent assessedInstance={value} />\n        </>\n      ) : null}\n    </BaseOrchestratorPage>\n  );\n};\nWorkflowInstancePage.displayName = 'WorkflowInstancePage';\n"],"names":[],"mappings":"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"}