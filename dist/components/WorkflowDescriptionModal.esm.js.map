{"version":3,"file":"WorkflowDescriptionModal.esm.js","sources":["../../src/components/WorkflowDescriptionModal.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { forwardRef, ForwardRefRenderFunction } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { WorkflowOverviewDTO } from '@red-hat-developer-hub/backstage-plugin-orchestrator-common';\n\nexport type WorkflowDescriptionModalProps = {\n  workflow: WorkflowOverviewDTO;\n  workflowError?: {\n    itemId: string;\n    error: any;\n  };\n  runWorkflowLink: string;\n  open: boolean;\n  onClose?: () => void;\n};\n\nexport type ParentComponentRef = HTMLElement;\n\nconst useStyles = makeStyles(_theme => ({\n  closeBtn: {\n    position: 'absolute',\n    right: 8,\n    top: 8,\n  },\n}));\n\nexport const RefForwardingWorkflowDescriptionModal: ForwardRefRenderFunction<\n  ParentComponentRef,\n  WorkflowDescriptionModalProps\n> = (props, forwardedRef): JSX.Element | null => {\n  const {\n    workflow,\n    open = false,\n    onClose,\n    runWorkflowLink,\n    workflowError,\n  } = props;\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  const handleRunWorkflow = () => {\n    if (runWorkflowLink) {\n      navigate(runWorkflowLink);\n    }\n  };\n\n  let content;\n  if (workflowError) {\n    content = (\n      <Box>\n        <Typography paragraph>\n          Failed to load details for the workflow ID:\n          {workflowError.itemId}\n        </Typography>\n        {workflowError.error.message && (\n          <Typography paragraph>{workflowError.error.message}</Typography>\n        )}\n      </Box>\n    );\n  } else if (workflow.description) {\n    content = <Box>{workflow.description}</Box>;\n  } else {\n    content = (\n      <Box>\n        <Typography paragraph>\n          Are you sure you want to run this workflow?\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Dialog\n      onClose={_ => onClose}\n      open={open}\n      ref={forwardedRef}\n      maxWidth=\"sm\"\n      fullWidth\n    >\n      <DialogTitle>\n        <Box>\n          <Typography variant=\"h5\">{workflow.name}</Typography>\n          <IconButton\n            className={classes.closeBtn}\n            aria-label=\"close\"\n            onClick={onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n\n      <DialogContent>{content}</DialogContent>\n      <DialogActions>\n        <Button\n          onClick={handleRunWorkflow}\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={!!workflowError}\n        >\n          Run workflow\n        </Button>\n        <Button onClick={onClose} color=\"primary\" variant=\"outlined\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport const WorkflowDescriptionModal = forwardRef(\n  RefForwardingWorkflowDescriptionModal,\n);\n"],"names":[],"mappings":"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"}