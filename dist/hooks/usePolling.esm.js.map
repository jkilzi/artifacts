{"version":3,"file":"usePolling.esm.js","sources":["../../src/hooks/usePolling.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\n\nimport useSwr, { useSWRConfig } from 'swr';\nimport * as uuid from 'uuid';\n\nimport { LONG_REFRESH_INTERVAL } from '../constants';\n\nconst usePolling = <T>(\n  fn: () => Promise<T>,\n  delayMs: number = LONG_REFRESH_INTERVAL,\n  continueRefresh?: (value: T | undefined) => boolean,\n  maxErrorRetryCount: number = 3,\n) => {\n  const config = useSWRConfig();\n\n  const prevFn = React.useRef(fn);\n  const uniqueKey = React.useMemo<string>(() => {\n    return uuid.v4();\n  }, []);\n\n  const [error, setError] = React.useState();\n  const isInitalLoad = React.useRef(true);\n\n  const { data, isLoading } = useSwr<T>(uniqueKey, fn, {\n    refreshInterval: (value_: T | undefined) => {\n      return !continueRefresh || continueRefresh(value_) ? delayMs : 0;\n    },\n    shouldRetryOnError: true,\n    onErrorRetry: (curError, _key, _config, revalidate, { retryCount }) => {\n      // requires custom behavior, retryErrorCount option doesn't support hiding the error before reaching the maximum\n      if (isInitalLoad.current || retryCount >= maxErrorRetryCount) {\n        setError(curError);\n      } else {\n        setTimeout(() => revalidate({ retryCount }), delayMs);\n      }\n    },\n    onSuccess: () => {\n      isInitalLoad.current = false;\n    },\n  });\n\n  const restart = React.useCallback(\n    () => config.mutate(uniqueKey),\n    [config, uniqueKey],\n  );\n\n  React.useEffect(() => {\n    if (prevFn.current !== fn) {\n      restart();\n      prevFn.current = fn;\n    }\n  }, [fn, restart]);\n\n  React.useEffect(() => {\n    // clean cache after unmount, no need to store the data globally\n    return () => config.cache.delete(uniqueKey);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return {\n    value: data,\n    error,\n    loading: isLoading,\n    restart,\n  };\n};\n\nexport default usePolling;\n"],"names":[],"mappings":";;;;;AAsBA,MAAM,aAAa,CACjB,EAAA,EACA,UAAkB,qBAClB,EAAA,eAAA,EACA,qBAA6B,CAC1B,KAAA;AACH,EAAA,MAAM,SAAS,YAAa,EAAA,CAAA;AAE5B,EAAM,MAAA,MAAA,GAAS,KAAM,CAAA,MAAA,CAAO,EAAE,CAAA,CAAA;AAC9B,EAAM,MAAA,SAAA,GAAY,KAAM,CAAA,OAAA,CAAgB,MAAM;AAC5C,IAAA,OAAO,KAAK,EAAG,EAAA,CAAA;AAAA,GACjB,EAAG,EAAE,CAAA,CAAA;AAEL,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAI,MAAM,QAAS,EAAA,CAAA;AACzC,EAAM,MAAA,YAAA,GAAe,KAAM,CAAA,MAAA,CAAO,IAAI,CAAA,CAAA;AAEtC,EAAA,MAAM,EAAE,IAAM,EAAA,SAAA,EAAc,GAAA,MAAA,CAAU,WAAW,EAAI,EAAA;AAAA,IACnD,eAAA,EAAiB,CAAC,MAA0B,KAAA;AAC1C,MAAA,OAAO,CAAC,eAAA,IAAmB,eAAgB,CAAA,MAAM,IAAI,OAAU,GAAA,CAAA,CAAA;AAAA,KACjE;AAAA,IACA,kBAAoB,EAAA,IAAA;AAAA,IACpB,YAAA,EAAc,CAAC,QAAU,EAAA,IAAA,EAAM,SAAS,UAAY,EAAA,EAAE,YAAiB,KAAA;AAErE,MAAI,IAAA,YAAA,CAAa,OAAW,IAAA,UAAA,IAAc,kBAAoB,EAAA;AAC5D,QAAA,QAAA,CAAS,QAAQ,CAAA,CAAA;AAAA,OACZ,MAAA;AACL,QAAA,UAAA,CAAW,MAAM,UAAW,CAAA,EAAE,UAAW,EAAC,GAAG,OAAO,CAAA,CAAA;AAAA,OACtD;AAAA,KACF;AAAA,IACA,WAAW,MAAM;AACf,MAAA,YAAA,CAAa,OAAU,GAAA,KAAA,CAAA;AAAA,KACzB;AAAA,GACD,CAAA,CAAA;AAED,EAAA,MAAM,UAAU,KAAM,CAAA,WAAA;AAAA,IACpB,MAAM,MAAO,CAAA,MAAA,CAAO,SAAS,CAAA;AAAA,IAC7B,CAAC,QAAQ,SAAS,CAAA;AAAA,GACpB,CAAA;AAEA,EAAA,KAAA,CAAM,UAAU,MAAM;AACpB,IAAI,IAAA,MAAA,CAAO,YAAY,EAAI,EAAA;AACzB,MAAQ,OAAA,EAAA,CAAA;AACR,MAAA,MAAA,CAAO,OAAU,GAAA,EAAA,CAAA;AAAA,KACnB;AAAA,GACC,EAAA,CAAC,EAAI,EAAA,OAAO,CAAC,CAAA,CAAA;AAEhB,EAAA,KAAA,CAAM,UAAU,MAAM;AAEpB,IAAA,OAAO,MAAM,MAAA,CAAO,KAAM,CAAA,MAAA,CAAO,SAAS,CAAA,CAAA;AAAA,GAE5C,EAAG,EAAE,CAAA,CAAA;AAEL,EAAO,OAAA;AAAA,IACL,KAAO,EAAA,IAAA;AAAA,IACP,KAAA;AAAA,IACA,OAAS,EAAA,SAAA;AAAA,IACT,OAAA;AAAA,GACF,CAAA;AACF;;;;"}