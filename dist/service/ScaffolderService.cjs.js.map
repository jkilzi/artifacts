{"version":3,"file":"ScaffolderService.cjs.js","sources":["../../src/service/ScaffolderService.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { loggerToWinstonLogger } from '@backstage/backend-common';\nimport type {\n  LoggerService,\n  UrlReaderService,\n} from '@backstage/backend-plugin-api';\nimport type { CatalogApi } from '@backstage/catalog-client';\nimport type { Config } from '@backstage/config';\nimport { ScmIntegrations } from '@backstage/integration';\nimport {\n  createBuiltinActions,\n  TemplateActionRegistry,\n} from '@backstage/plugin-scaffolder-backend';\nimport {\n  ActionContext,\n  TemplateAction,\n} from '@backstage/plugin-scaffolder-node';\nimport type { JsonObject, JsonValue } from '@backstage/types';\n\nimport fs from 'fs-extra';\n\nimport { randomUUID } from 'crypto';\nimport path from 'path';\nimport { PassThrough } from 'stream';\n\nimport { getWorkingDirectory } from './Helper';\n\nexport interface ActionExecutionContext {\n  actionId: string;\n  instanceId: string | undefined;\n  input: JsonObject;\n}\n\nexport class ScaffolderService {\n  private actionRegistry: TemplateActionRegistry;\n  private streamLogger = new PassThrough();\n\n  constructor(\n    private readonly logger: LoggerService,\n    private readonly config: Config,\n    private readonly catalogApi: CatalogApi,\n    private readonly urlReader: UrlReaderService,\n  ) {\n    this.actionRegistry = new TemplateActionRegistry();\n  }\n\n  public loadActions(): void {\n    const actions = [\n      ...createBuiltinActions({\n        integrations: ScmIntegrations.fromConfig(this.config),\n        catalogClient: this.catalogApi,\n        reader: this.urlReader,\n        config: this.config,\n      }),\n    ];\n    actions.forEach(a => this.actionRegistry.register(a));\n  }\n\n  public getAction(id: string): TemplateAction {\n    return this.actionRegistry.get(id);\n  }\n\n  public async executeAction(\n    actionExecutionContext: ActionExecutionContext,\n  ): Promise<JsonValue> {\n    if (this.actionRegistry.list().length === 0) {\n      this.loadActions();\n    }\n\n    const action: TemplateAction = this.getAction(\n      actionExecutionContext.actionId,\n    );\n    const stepOutput: { [outputName: string]: JsonValue } = {};\n\n    let workspacePath: string;\n    try {\n      const workingDirectory = await getWorkingDirectory(\n        this.config,\n        this.logger,\n      );\n      workspacePath = path.join(\n        workingDirectory,\n        actionExecutionContext.instanceId ?? randomUUID(),\n      );\n    } catch (err: unknown) {\n      this.logger.error(\n        `Error getting working directory to execute action ${actionExecutionContext.actionId}`,\n        err as Error,\n      );\n      throw err;\n    }\n    const actionContext: ActionContext<JsonObject> = {\n      input: actionExecutionContext.input,\n      workspacePath: workspacePath,\n      // TODO: Move this to LoggerService after scaffolder-node moves to LoggerService\n      // https://github.com/backstage/backstage/issues/26933\n      logger: loggerToWinstonLogger(this.logger),\n      logStream: this.streamLogger,\n      createTemporaryDirectory: async () =>\n        await fs.mkdtemp(`${workspacePath}_step-${0}-`),\n      output(name: string, value: JsonValue) {\n        stepOutput[name] = value;\n      },\n      getInitiatorCredentials: async () => {\n        return {\n          $$type: '@backstage/BackstageCredentials',\n          principal: 'mock-principal',\n        };\n      },\n      checkpoint: async (key, fn) => {\n        this.logger.info(`Orchestrator ScaffolderService checkpoint ${key}`);\n        return fn();\n      },\n    };\n    await action.handler(actionContext);\n\n    return stepOutput;\n  }\n}\n"],"names":["TemplateActionRegistry","PassThrough","createBuiltinActions","ScmIntegrations","getWorkingDirectory","path","randomUUID","loggerToWinstonLogger","fs"],"mappings":"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"}