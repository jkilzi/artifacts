{"version":3,"file":"WorkflowCacheService.cjs.js","sources":["../../src/service/WorkflowCacheService.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { LoggerService } from '@backstage/backend-plugin-api';\nimport { PluginTaskScheduler } from '@backstage/backend-tasks';\n\nimport { DataIndexService } from './DataIndexService';\nimport { SonataFlowService } from './SonataFlowService';\n\nexport type CacheHandler = 'skip' | 'throw';\n\nexport class WorkflowCacheService {\n  private readonly TASK_ID = 'task__Orchestrator__WorkflowCacheService';\n  private readonly DEFAULT_FREQUENCY_IN_SECONDS = 5;\n  private readonly DEFAULT_TIMEOUT_IN_MINUTES = 10;\n  private readonly definitionIdCache = new Set<string>();\n\n  constructor(\n    private readonly logger: LoggerService,\n    private readonly dataIndexService: DataIndexService,\n    private readonly sonataFlowService: SonataFlowService,\n  ) {}\n\n  public get definitionIds(): string[] {\n    return Array.from(this.definitionIdCache);\n  }\n\n  public isEmpty(): boolean {\n    return this.definitionIdCache.size === 0;\n  }\n\n  public isAvailable(\n    definitionId?: string,\n    cacheHandler: CacheHandler = 'skip',\n  ): boolean {\n    if (!definitionId) {\n      return false;\n    }\n    const isAvailable = this.definitionIdCache.has(definitionId);\n    if (!isAvailable && cacheHandler === 'throw') {\n      throw new Error(\n        `Workflow service \"${definitionId}\" not available at the moment`,\n      );\n    }\n    return isAvailable;\n  }\n\n  public schedule(args: {\n    scheduler: PluginTaskScheduler;\n    frequencyInSeconds?: number;\n    timeoutInMinutes?: number;\n  }): void {\n    const {\n      scheduler,\n      frequencyInSeconds = this.DEFAULT_FREQUENCY_IN_SECONDS,\n      timeoutInMinutes = this.DEFAULT_TIMEOUT_IN_MINUTES,\n    } = args;\n\n    scheduler.scheduleTask({\n      id: this.TASK_ID,\n      frequency: { seconds: frequencyInSeconds },\n      timeout: { minutes: timeoutInMinutes },\n      fn: async () => {\n        await this.runTask();\n      },\n    });\n  }\n\n  private async runTask() {\n    try {\n      const idUrlMap = await this.dataIndexService.fetchWorkflowServiceUrls();\n      this.definitionIdCache.forEach(definitionId => {\n        if (!idUrlMap[definitionId]) {\n          this.definitionIdCache.delete(definitionId);\n        }\n      });\n      await Promise.all(\n        Object.entries(idUrlMap).map(async ([definitionId, serviceUrl]) => {\n          let isServiceUp = false;\n          try {\n            isServiceUp = await this.sonataFlowService.pingWorkflowService({\n              definitionId,\n              serviceUrl,\n            });\n          } catch (err) {\n            this.logger.error(\n              `Ping workflow ${definitionId} service threw error: ${err}`,\n            );\n          }\n          if (isServiceUp) {\n            this.definitionIdCache.add(definitionId);\n          } else {\n            this.logger.error(\n              `Failed to ping service for workflow ${definitionId} at ${serviceUrl}`,\n            );\n            if (this.definitionIdCache.has(definitionId)) {\n              this.definitionIdCache.delete(definitionId);\n            }\n          }\n        }),\n      );\n\n      const workflowDefinitionIds = this.isEmpty()\n        ? 'empty cache'\n        : Array.from(this.definitionIdCache).join(', ');\n\n      this.logger.debug(\n        `${this.TASK_ID} updated the workflow definition ID cache to: ${workflowDefinitionIds}`,\n      );\n    } catch (error) {\n      this.logger.error(`Error running ${this.TASK_ID}: ${error}`);\n      return;\n    }\n  }\n}\n"],"names":[],"mappings":"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"}