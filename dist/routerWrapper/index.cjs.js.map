{"version":3,"file":"index.cjs.js","sources":["../../src/routerWrapper/index.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type {\n  AuthService,\n  DiscoveryService,\n  HttpAuthService,\n  LoggerService,\n  PermissionsService,\n  SchedulerService,\n  UrlReaderService,\n} from '@backstage/backend-plugin-api';\nimport type { CatalogApi } from '@backstage/catalog-client';\nimport type { Config } from '@backstage/config';\n\nimport express from 'express';\n\nimport { DevModeService } from '../service/DevModeService';\nimport { createBackendRouter } from '../service/router';\n\nexport interface RouterOptions {\n  config: Config;\n  logger: LoggerService;\n  discovery: DiscoveryService;\n  catalogApi: CatalogApi;\n  urlReader: UrlReaderService;\n  scheduler: SchedulerService;\n  permissions: PermissionsService;\n  httpAuth: HttpAuthService;\n  auth: AuthService;\n}\n\nexport async function createRouter(\n  args: RouterOptions,\n): Promise<express.Router> {\n  const autoStartDevMode =\n    args.config.getOptionalBoolean(\n      'orchestrator.sonataFlowService.autoStart',\n    ) ?? false;\n\n  if (autoStartDevMode) {\n    const devModeService = new DevModeService(args.config, args.logger);\n\n    const isSonataFlowUp = await devModeService.launchDevMode();\n\n    if (!isSonataFlowUp) {\n      args.logger.error('SonataFlow is not up. Check your configuration.');\n    }\n  }\n\n  return await createBackendRouter({\n    config: args.config,\n    logger: args.logger,\n    discovery: args.discovery,\n    catalogApi: args.catalogApi,\n    urlReader: args.urlReader,\n    scheduler: args.scheduler,\n    permissions: args.permissions,\n    httpAuth: args.httpAuth,\n    auth: args.auth,\n  });\n}\n"],"names":["DevModeService","createBackendRouter"],"mappings":";;;;;AA4CA,eAAsB,aACpB,IACyB,EAAA;AACzB,EAAM,MAAA,gBAAA,GACJ,KAAK,MAAO,CAAA,kBAAA;AAAA,IACV,0CAAA;AAAA,GACG,IAAA,KAAA,CAAA;AAEP,EAAA,IAAI,gBAAkB,EAAA;AACpB,IAAA,MAAM,iBAAiB,IAAIA,6BAAA,CAAe,IAAK,CAAA,MAAA,EAAQ,KAAK,MAAM,CAAA,CAAA;AAElE,IAAM,MAAA,cAAA,GAAiB,MAAM,cAAA,CAAe,aAAc,EAAA,CAAA;AAE1D,IAAA,IAAI,CAAC,cAAgB,EAAA;AACnB,MAAK,IAAA,CAAA,MAAA,CAAO,MAAM,iDAAiD,CAAA,CAAA;AAAA,KACrE;AAAA,GACF;AAEA,EAAA,OAAO,MAAMC,0BAAoB,CAAA;AAAA,IAC/B,QAAQ,IAAK,CAAA,MAAA;AAAA,IACb,QAAQ,IAAK,CAAA,MAAA;AAAA,IACb,WAAW,IAAK,CAAA,SAAA;AAAA,IAChB,YAAY,IAAK,CAAA,UAAA;AAAA,IACjB,WAAW,IAAK,CAAA,SAAA;AAAA,IAChB,WAAW,IAAK,CAAA,SAAA;AAAA,IAChB,aAAa,IAAK,CAAA,WAAA;AAAA,IAClB,UAAU,IAAK,CAAA,QAAA;AAAA,IACf,MAAM,IAAK,CAAA,IAAA;AAAA,GACZ,CAAA,CAAA;AACH;;;;"}