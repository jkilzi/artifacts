{"version":3,"file":"types.esm.js","sources":["../src/types.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { JsonObject } from '@backstage/types';\n\nimport type { Specification } from '@severlessworkflow/sdk-typescript';\nimport type { JSONSchema7, JSONSchema7Definition } from 'json-schema';\n\nimport type { ProcessInstance, ProcessInstanceStateValues } from './models';\n\ntype Id<T> = { [P in keyof T]: T[P] };\n\ntype OmitDistributive<T, K extends PropertyKey> = T extends any\n  ? T extends object\n    ? Id<OmitRecursively<T, K>>\n    : T\n  : never;\n\nexport type OmitRecursively<T, K extends PropertyKey> = Omit<\n  { [P in keyof T]: OmitDistributive<T[P], K> },\n  K\n>;\n\nexport type WorkflowDefinition = OmitRecursively<\n  Specification.Workflow,\n  'normalize'\n>;\n\nexport type WorkflowListResult = {\n  items: WorkflowDefinition[];\n  totalCount: number;\n  offset: number;\n  limit: number;\n};\n\nexport type WorkflowOverviewListResult = {\n  items: WorkflowOverview[];\n  totalCount: number;\n  offset: number;\n  limit: number;\n};\n\nexport type WorkflowFormat = 'yaml' | 'json';\n\nexport type WorkflowInputSchemaStep = {\n  schema: JsonObjectSchema;\n  title: string;\n  key: string;\n  data: JsonObject;\n  readonlyKeys: string[];\n};\n\nexport type JsonObjectSchema = Omit<JSONSchema7, 'properties'> & {\n  properties: { [key: string]: JSONSchema7 };\n};\n\nexport type ComposedSchema = Omit<JSONSchema7, 'properties'> & {\n  properties: {\n    [key: string]: Omit<JSONSchema7, 'properties'> & {\n      properties: { [key: string]: JsonObjectSchema };\n    };\n  };\n};\n\nexport const isJsonObjectSchema = (\n  schema: JSONSchema7 | JsonObjectSchema | JSONSchema7Definition,\n): schema is JsonObjectSchema =>\n  typeof schema === 'object' &&\n  !!schema.properties &&\n  Object.values(schema.properties).filter(\n    curSchema => typeof curSchema !== 'object',\n  ).length === 0;\n\nexport const isComposedSchema = (\n  schema: JSONSchema7 | ComposedSchema,\n): schema is ComposedSchema =>\n  !!schema.properties &&\n  Object.values(schema.properties).filter(\n    curSchema => !isJsonObjectSchema(curSchema),\n  ).length === 0;\n\nexport interface WorkflowExecutionResponse {\n  id: string;\n}\n\nexport enum WorkflowCategory {\n  ASSESSMENT = 'assessment',\n  INFRASTRUCTURE = 'infrastructure',\n}\n\nexport interface WorkflowOverview {\n  workflowId: string;\n  format: WorkflowFormat;\n  name?: string;\n  lastRunId?: string;\n  lastTriggeredMs?: number;\n  lastRunStatus?: ProcessInstanceStateValues;\n  category?: string;\n  avgDurationMs?: number;\n  description?: string;\n}\n\nexport interface WorkflowInfo {\n  id: string;\n  type?: string;\n  name?: string;\n  version?: string;\n  annotations?: string[];\n  description?: string;\n  inputSchema?: JSONSchema7;\n  endpoint?: string;\n  serviceUrl?: string;\n  roles?: string[];\n  source?: string;\n  metadata?: Map<string, string>;\n  nodes?: Node[];\n}\n\nexport interface Node {\n  id: string;\n  type?: string;\n  name?: string;\n  uniqueId?: string;\n  nodeDefinitionId?: string;\n}\n\nexport interface AssessedProcessInstance {\n  instance: ProcessInstance;\n  assessedBy?: ProcessInstance;\n}\n"],"names":["WorkflowCategory"],"mappings":"AA4EO,MAAM,kBAAqB,GAAA,CAChC,MAEA,KAAA,OAAO,WAAW,QAClB,IAAA,CAAC,CAAC,MAAA,CAAO,UACT,IAAA,MAAA,CAAO,MAAO,CAAA,MAAA,CAAO,UAAU,CAAE,CAAA,MAAA;AAAA,EAC/B,CAAA,SAAA,KAAa,OAAO,SAAc,KAAA,QAAA;AACpC,CAAA,CAAE,MAAW,KAAA,EAAA;AAEF,MAAA,gBAAA,GAAmB,CAC9B,MAAA,KAEA,CAAC,CAAC,MAAO,CAAA,UAAA,IACT,MAAO,CAAA,MAAA,CAAO,MAAO,CAAA,UAAU,CAAE,CAAA,MAAA;AAAA,EAC/B,CAAA,SAAA,KAAa,CAAC,kBAAA,CAAmB,SAAS,CAAA;AAC5C,CAAA,CAAE,MAAW,KAAA,EAAA;AAMH,IAAA,gBAAA,qBAAAA,iBAAL,KAAA;AACL,EAAAA,kBAAA,YAAa,CAAA,GAAA,YAAA,CAAA;AACb,EAAAA,kBAAA,gBAAiB,CAAA,GAAA,gBAAA,CAAA;AAFP,EAAAA,OAAAA,iBAAAA,CAAAA;AAAA,CAAA,EAAA,gBAAA,IAAA,EAAA;;;;"}