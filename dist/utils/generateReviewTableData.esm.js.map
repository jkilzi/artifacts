{"version":3,"file":"generateReviewTableData.esm.js","sources":["../../src/utils/generateReviewTableData.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// import { JSONSchema7 } from 'json-schema';\nimport { JsonObject, JsonValue } from '@backstage/types';\n\nimport type { JSONSchema7 } from 'json-schema';\nimport { JsonSchema, Draft07 as JSONSchema } from 'json-schema-library';\n\nexport function isJsonObject(value?: JsonValue): value is JsonObject {\n  return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nexport function processSchema(\n  key: string,\n  value: JsonValue | undefined,\n  schema: JSONSchema7,\n  formState: JsonObject,\n): JsonObject {\n  const parsedSchema = new JSONSchema(schema);\n  const definitionInSchema =\n    key === ''\n      ? (schema as JsonSchema)\n      : parsedSchema.getSchema({\n          pointer: `#/${key}`,\n          data: formState,\n        });\n\n  const name = definitionInSchema?.title ?? key;\n  if (definitionInSchema) {\n    if (definitionInSchema['ui:widget'] === 'password') {\n      return { [name]: '******' };\n    }\n\n    if (isJsonObject(value)) {\n      // Recurse nested objects\n      const nestedValue = Object.entries(value).reduce(\n        (prev, [nestedKey, _nestedValue]) => {\n          const curKey = key ? `${key}/${nestedKey}` : nestedKey;\n          return {\n            ...prev,\n            ...processSchema(curKey, _nestedValue, schema, formState),\n          };\n        },\n        {},\n      );\n      return { [name]: nestedValue };\n    }\n  }\n\n  return { [name]: value };\n}\n\nfunction generateReviewTableData(\n  schema: JSONSchema7,\n  data: JsonObject,\n): JsonObject {\n  schema.title = '';\n  const result = processSchema('', data, schema, data);\n  return result[''] as JsonObject;\n}\n\nexport default generateReviewTableData;\n"],"names":["JSONSchema"],"mappings":";;AAsBO,SAAS,aAAa,KAAwC,EAAA;AACnE,EAAO,OAAA,OAAO,UAAU,QAAY,IAAA,KAAA,KAAU,QAAQ,CAAC,KAAA,CAAM,QAAQ,KAAK,CAAA,CAAA;AAC5E,CAAA;AAEO,SAAS,aACd,CAAA,GAAA,EACA,KACA,EAAA,MAAA,EACA,SACY,EAAA;AACZ,EAAM,MAAA,YAAA,GAAe,IAAIA,OAAA,CAAW,MAAM,CAAA,CAAA;AAC1C,EAAA,MAAM,kBACJ,GAAA,GAAA,KAAQ,EACH,GAAA,MAAA,GACD,aAAa,SAAU,CAAA;AAAA,IACrB,OAAA,EAAS,KAAK,GAAG,CAAA,CAAA;AAAA,IACjB,IAAM,EAAA,SAAA;AAAA,GACP,CAAA,CAAA;AAEP,EAAM,MAAA,IAAA,GAAO,oBAAoB,KAAS,IAAA,GAAA,CAAA;AAC1C,EAAA,IAAI,kBAAoB,EAAA;AACtB,IAAI,IAAA,kBAAA,CAAmB,WAAW,CAAA,KAAM,UAAY,EAAA;AAClD,MAAA,OAAO,EAAE,CAAC,IAAI,GAAG,QAAS,EAAA,CAAA;AAAA,KAC5B;AAEA,IAAI,IAAA,YAAA,CAAa,KAAK,CAAG,EAAA;AAEvB,MAAA,MAAM,WAAc,GAAA,MAAA,CAAO,OAAQ,CAAA,KAAK,CAAE,CAAA,MAAA;AAAA,QACxC,CAAC,IAAA,EAAM,CAAC,SAAA,EAAW,YAAY,CAAM,KAAA;AACnC,UAAA,MAAM,SAAS,GAAM,GAAA,CAAA,EAAG,GAAG,CAAA,CAAA,EAAI,SAAS,CAAK,CAAA,GAAA,SAAA,CAAA;AAC7C,UAAO,OAAA;AAAA,YACL,GAAG,IAAA;AAAA,YACH,GAAG,aAAA,CAAc,MAAQ,EAAA,YAAA,EAAc,QAAQ,SAAS,CAAA;AAAA,WAC1D,CAAA;AAAA,SACF;AAAA,QACA,EAAC;AAAA,OACH,CAAA;AACA,MAAA,OAAO,EAAE,CAAC,IAAI,GAAG,WAAY,EAAA,CAAA;AAAA,KAC/B;AAAA,GACF;AAEA,EAAA,OAAO,EAAE,CAAC,IAAI,GAAG,KAAM,EAAA,CAAA;AACzB,CAAA;AAEA,SAAS,uBAAA,CACP,QACA,IACY,EAAA;AACZ,EAAA,MAAA,CAAO,KAAQ,GAAA,EAAA,CAAA;AACf,EAAA,MAAM,MAAS,GAAA,aAAA,CAAc,EAAI,EAAA,IAAA,EAAM,QAAQ,IAAI,CAAA,CAAA;AACnD,EAAA,OAAO,OAAO,EAAE,CAAA,CAAA;AAClB;;;;"}