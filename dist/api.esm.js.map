{"version":3,"file":"api.esm.js","sources":["../src/api.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createApiRef } from '@backstage/core-plugin-api';\nimport { JsonObject } from '@backstage/types';\n\nimport { FormProps } from '@rjsf/core';\nimport { ErrorSchema, UiSchema } from '@rjsf/utils';\nimport type { JSONSchema7 } from 'json-schema';\n\n/**\n * @public\n * FormDecoratorProps\n *\n * Type definition for properties passed to a form decorator component.\n * This interface extends selected fields from `FormProps` provided by `react-jsonschema-form`,\n * with additional custom functionality.\n *\n * @see {@link https://rjsf-team.github.io/react-jsonschema-form/docs/api-reference/form-props|RJSF Form Props Documentation}\n *\n * Core properties include:\n * - formData: The form's current data\n * - formContext: Contextual data shared across form components\n * - widgets: Custom widget components for form fields\n * - onChange: Handler for form data changes\n * - customValidate: Custom validation function\n *\n * Additional properties:\n * - getExtraErrors: Async function to fetch additional validation errors.\n *   This replaces the static 'extraErrors' prop from react-jsonschema-form, which can't be used as is, since onSubmit isn't exposed.\n *   The orchestrator form component will call getExtraErrors when running onSubmit.\n */\nexport type FormDecoratorProps = Pick<\n  FormProps<JsonObject, JSONSchema7>,\n  'formData' | 'formContext' | 'widgets' | 'onChange' | 'customValidate'\n> & {\n  getExtraErrors?: (\n    formData: JsonObject,\n  ) => Promise<ErrorSchema<JsonObject>> | undefined;\n};\n\n/**\n * @public\n * OrchestratorFormDecorator\n *\n */\nexport type OrchestratorFormDecorator = (\n  FormComponent: React.ComponentType<FormDecoratorProps>,\n) => React.ComponentType;\n\n/**\n * @public\n * OrchestratorFormApi\n * API to be implemented by factory in a custom plugin\n */\nexport interface OrchestratorFormApi {\n  /**\n   * @public\n   * getFormDecorator\n   * return the form decorator\n   */\n  getFormDecorator(\n    schema: JSONSchema7,\n    uiSchema: UiSchema<JsonObject, JSONSchema7>,\n    initialFormData?: JsonObject,\n  ): OrchestratorFormDecorator;\n}\n\n/**\n * @public\n * OrchestratorFormApiRef\n *\n */\nexport const orchestratorFormApiRef = createApiRef<OrchestratorFormApi>({\n  id: 'plugin.orchestrator.form',\n});\n"],"names":[],"mappings":";;AAqFO,MAAM,yBAAyB,YAAkC,CAAA;AAAA,EACtE,EAAI,EAAA,0BAAA;AACN,CAAC;;;;"}