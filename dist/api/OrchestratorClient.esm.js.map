{"version":3,"file":"OrchestratorClient.esm.js","sources":["../../src/api/OrchestratorClient.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiscoveryApi, IdentityApi } from '@backstage/core-plugin-api';\nimport type { JsonObject } from '@backstage/types';\n\nimport axios, {\n  AxiosInstance,\n  AxiosRequestConfig,\n  AxiosResponse,\n  isAxiosError,\n  RawAxiosRequestHeaders,\n} from 'axios';\n\nimport {\n  AssessedProcessInstanceDTO,\n  Configuration,\n  DefaultApi,\n  ExecuteWorkflowResponseDTO,\n  Filter,\n  GetInstancesRequest,\n  InputSchemaResponseDTO,\n  PaginationInfoDTO,\n  ProcessInstanceListResultDTO,\n  WorkflowOverviewDTO,\n  WorkflowOverviewListResultDTO,\n} from '@red-hat-developer-hub/backstage-plugin-orchestrator-common';\n\nimport { OrchestratorApi } from './api';\n\nconst getError = (err: unknown): Error => {\n  if (\n    isAxiosError<{ error: { message: string; name: string } }>(err) &&\n    err.response?.data?.error?.message\n  ) {\n    const error = new Error(err.response?.data?.error?.message);\n    error.name = err.response?.data?.error?.name || 'Error';\n    return error;\n  }\n  return err as Error;\n};\n\nexport interface OrchestratorClientOptions {\n  discoveryApi: DiscoveryApi;\n  identityApi: IdentityApi;\n  axiosInstance?: AxiosInstance;\n}\nexport class OrchestratorClient implements OrchestratorApi {\n  private readonly discoveryApi: DiscoveryApi;\n  private readonly identityApi: IdentityApi;\n  private axiosInstance?: AxiosInstance;\n\n  private baseUrl: string | null = null;\n  constructor(options: OrchestratorClientOptions) {\n    this.discoveryApi = options.discoveryApi;\n    this.identityApi = options.identityApi;\n    this.axiosInstance = options.axiosInstance;\n  }\n\n  async getDefaultAPI(): Promise<DefaultApi> {\n    const baseUrl = await this.getBaseUrl();\n    const { token: idToken } = await this.identityApi.getCredentials();\n\n    // Fixme: Following makes mocking of global axios complicated in the tests, ideally there should be just one axios instance:\n    this.axiosInstance =\n      this.axiosInstance ||\n      axios.create({\n        baseURL: baseUrl,\n        headers: {\n          ...(idToken && { Authorization: `Bearer ${idToken}` }),\n        },\n        withCredentials: true,\n      });\n    const config = new Configuration({\n      basePath: baseUrl,\n    });\n\n    return new DefaultApi(config, baseUrl, this.axiosInstance);\n  }\n  private async getBaseUrl(): Promise<string> {\n    if (!this.baseUrl) {\n      this.baseUrl = await this.discoveryApi.getBaseUrl('orchestrator');\n    }\n\n    return this.baseUrl;\n  }\n\n  async executeWorkflow(args: {\n    workflowId: string;\n    parameters: JsonObject;\n    businessKey?: string;\n  }): Promise<AxiosResponse<ExecuteWorkflowResponseDTO>> {\n    const defaultApi = await this.getDefaultAPI();\n    const reqConfigOption: AxiosRequestConfig =\n      await this.getDefaultReqConfig();\n    try {\n      return await defaultApi.executeWorkflow(\n        args.workflowId,\n        { inputData: args.parameters },\n        args.businessKey,\n        reqConfigOption,\n      );\n    } catch (err) {\n      throw getError(err);\n    }\n  }\n\n  async abortWorkflowInstance(\n    instanceId: string,\n  ): Promise<AxiosResponse<string>> {\n    const defaultApi = await this.getDefaultAPI();\n    const reqConfigOption: AxiosRequestConfig =\n      await this.getDefaultReqConfig();\n    try {\n      return await defaultApi.abortWorkflow(instanceId, reqConfigOption);\n    } catch (err) {\n      throw getError(err);\n    }\n  }\n\n  async getWorkflowSource(workflowId: string): Promise<AxiosResponse<string>> {\n    const defaultApi = await this.getDefaultAPI();\n    const reqConfigOption: AxiosRequestConfig =\n      await this.getDefaultReqConfig();\n    reqConfigOption.responseType = 'text';\n    try {\n      return await defaultApi.getWorkflowSourceById(\n        workflowId,\n        reqConfigOption,\n      );\n    } catch (err) {\n      throw getError(err);\n    }\n  }\n\n  async listWorkflowOverviews(\n    paginationInfo?: PaginationInfoDTO,\n    filters?: Filter,\n  ): Promise<AxiosResponse<WorkflowOverviewListResultDTO>> {\n    const defaultApi = await this.getDefaultAPI();\n    const reqConfigOption: AxiosRequestConfig =\n      await this.getDefaultReqConfig();\n    try {\n      return await defaultApi.getWorkflowsOverview(\n        { paginationInfo, filters },\n        reqConfigOption,\n      );\n    } catch (err) {\n      throw getError(err);\n    }\n  }\n\n  async listInstances(\n    args: GetInstancesRequest,\n  ): Promise<AxiosResponse<ProcessInstanceListResultDTO>> {\n    const defaultApi = await this.getDefaultAPI();\n    const reqConfigOption: AxiosRequestConfig =\n      await this.getDefaultReqConfig();\n    try {\n      return await defaultApi.getInstances(args, reqConfigOption);\n    } catch (err) {\n      throw getError(err);\n    }\n  }\n\n  async getInstance(\n    instanceId: string,\n    includeAssessment = false,\n  ): Promise<AxiosResponse<AssessedProcessInstanceDTO>> {\n    const defaultApi = await this.getDefaultAPI();\n    const reqConfigOption: AxiosRequestConfig =\n      await this.getDefaultReqConfig();\n    try {\n      return await defaultApi.getInstanceById(\n        instanceId,\n        includeAssessment,\n        reqConfigOption,\n      );\n    } catch (err) {\n      throw getError(err);\n    }\n  }\n\n  async getWorkflowDataInputSchema(\n    workflowId: string,\n    instanceId?: string,\n  ): Promise<AxiosResponse<InputSchemaResponseDTO>> {\n    const defaultApi = await this.getDefaultAPI();\n    const reqConfigOption: AxiosRequestConfig =\n      await this.getDefaultReqConfig();\n    try {\n      return await defaultApi.getWorkflowInputSchemaById(\n        workflowId,\n        instanceId,\n        reqConfigOption,\n      );\n    } catch (err) {\n      throw getError(err);\n    }\n  }\n\n  async getWorkflowOverview(\n    workflowId: string,\n  ): Promise<AxiosResponse<WorkflowOverviewDTO>> {\n    const defaultApi = await this.getDefaultAPI();\n    const reqConfigOption: AxiosRequestConfig =\n      await this.getDefaultReqConfig();\n    try {\n      return await defaultApi.getWorkflowOverviewById(\n        workflowId,\n        reqConfigOption,\n      );\n    } catch (err) {\n      throw getError(err);\n    }\n  }\n\n  // getDefaultReqConfig is a convenience wrapper that includes authentication and other necessary headers\n  private async getDefaultReqConfig(\n    additionalHeaders?: RawAxiosRequestHeaders,\n  ): Promise<AxiosRequestConfig> {\n    const idToken = await this.identityApi.getCredentials();\n    const reqConfigOption: AxiosRequestConfig = {\n      baseURL: await this.getBaseUrl(),\n      headers: {\n        Authorization: `Bearer ${idToken.token}`,\n        ...additionalHeaders,\n      },\n    };\n    return reqConfigOption;\n  }\n}\n"],"names":[],"mappings":"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"}