{"version":3,"file":"common.cjs.js","sources":["../../../src/generated/client/common.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * Orchestrator plugin\n * API to interact with orchestrator plugin\n *\n * The version of the OpenAPI document: 0.0.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport type { Configuration } from \"./configuration\";\nimport type { RequestArgs } from \"./base\";\nimport type { AxiosInstance, AxiosResponse } from 'axios';\nimport { RequiredError } from \"./base\";\n\n/**\n *\n * @export\n */\nexport const DUMMY_BASE_URL = 'https://example.com'\n\n/**\n *\n * @throws {RequiredError}\n * @export\n */\nexport const assertParamExists = function (functionName: string, paramName: string, paramValue: unknown) {\n    if (paramValue === null || paramValue === undefined) {\n        throw new RequiredError(paramName, `Required parameter ${paramName} was null or undefined when calling ${functionName}.`);\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setApiKeyToObject = async function (object: any, keyParamName: string, configuration?: Configuration) {\n    if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue = typeof configuration.apiKey === 'function'\n            ? await configuration.apiKey(keyParamName)\n            : await configuration.apiKey;\n        object[keyParamName] = localVarApiKeyValue;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setBasicAuthToObject = function (object: any, configuration?: Configuration) {\n    if (configuration && (configuration.username || configuration.password)) {\n        object[\"auth\"] = { username: configuration.username, password: configuration.password };\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setBearerAuthToObject = async function (object: any, configuration?: Configuration) {\n    if (configuration && configuration.accessToken) {\n        const accessToken = typeof configuration.accessToken === 'function'\n            ? await configuration.accessToken()\n            : await configuration.accessToken;\n        object[\"Authorization\"] = \"Bearer \" + accessToken;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setOAuthToObject = async function (object: any, name: string, scopes: string[], configuration?: Configuration) {\n    if (configuration && configuration.accessToken) {\n        const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n            ? await configuration.accessToken(name, scopes)\n            : await configuration.accessToken;\n        object[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n    }\n}\n\nfunction setFlattenedQueryParams(urlSearchParams: URLSearchParams, parameter: any, key: string = \"\"): void {\n    if (parameter == null) return;\n    if (typeof parameter === \"object\") {\n        if (Array.isArray(parameter)) {\n            (parameter as any[]).forEach(item => setFlattenedQueryParams(urlSearchParams, item, key));\n        } \n        else {\n            Object.keys(parameter).forEach(currentKey => \n                setFlattenedQueryParams(urlSearchParams, parameter[currentKey], `${key}${key !== '' ? '.' : ''}${currentKey}`)\n            );\n        }\n    } \n    else {\n        if (urlSearchParams.has(key)) {\n            urlSearchParams.append(key, parameter);\n        } \n        else {\n            urlSearchParams.set(key, parameter);\n        }\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setSearchParams = function (url: URL, ...objects: any[]) {\n    const searchParams = new URLSearchParams(url.search);\n    setFlattenedQueryParams(searchParams, objects);\n    url.search = searchParams.toString();\n}\n\n/**\n *\n * @export\n */\nexport const serializeDataIfNeeded = function (value: any, requestOptions: any, configuration?: Configuration) {\n    const nonString = typeof value !== 'string';\n    const needsSerialization = nonString && configuration && configuration.isJsonMime\n        ? configuration.isJsonMime(requestOptions.headers['Content-Type'])\n        : nonString;\n    return needsSerialization\n        ? JSON.stringify(value !== undefined ? value : {})\n        : (value || \"\");\n}\n\n/**\n *\n * @export\n */\nexport const toPathString = function (url: URL) {\n    return url.pathname + url.search + url.hash\n}\n\n/**\n *\n * @export\n */\nexport const createRequestFunction = function (axiosArgs: RequestArgs, globalAxios: AxiosInstance, BASE_PATH: string, configuration?: Configuration) {\n    return <T = unknown, R = AxiosResponse<T>>(axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n        const axiosRequestArgs = {...axiosArgs.options, url: (axios.defaults.baseURL ? '' : configuration?.basePath ?? basePath) + axiosArgs.url};\n        return axios.request<T, R>(axiosRequestArgs);\n    };\n}\n"],"names":["RequiredError"],"mappings":"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"}